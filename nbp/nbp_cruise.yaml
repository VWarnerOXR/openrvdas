##########
# Sample YAML cruise definition file for NBP openrvdas, created by hacked-up
# script at local/nbp/create_MOXA_cruise_definition.py.

# Note that the one hack necessary is that YAML interprets 'off' (when not
# quoted) as the literal 'False'. So YAML needs to quote 'off'.

########################################
cruise:
  id: NBPxxxx
  start: '2019-07-30'
  end: '2019-12-31'

########################################
loggers:
  adcp:
    configs:
    - adcp->off
    - adcp->net
    - adcp->file/net
    - adcp->file/net/db
  ctdd:
    configs:
    - ctdd->off
    - ctdd->net
    - ctdd->file/net
    - ctdd->file/net/db
  eng1:
    configs:
    - eng1->off
    - eng1->net
    - eng1->file/net
    - eng1->file/net/db
  gp02:
    configs:
    - gp02->off
    - gp02->net
    - gp02->file/net
    - gp02->file/net/db
  grv1:
    configs:
    - grv1->off
    - grv1->net
    - grv1->file/net
    - grv1->file/net/db
  gyr1:
    configs:
    - gyr1->off
    - gyr1->net
    - gyr1->file/net
    - gyr1->file/net/db
  hdas:
    configs:
    - hdas->off
    - hdas->net
    - hdas->file/net
    - hdas->file/net/db
  knud:
    configs:
    - knud->off
    - knud->net
    - knud->file/net
    - knud->file/net/db
  mbdp:
    configs:
    - mbdp->off
    - mbdp->net
    - mbdp->file/net
    - mbdp->file/net/db
  mwx1:
    configs:
    - mwx1->off
    - mwx1->net
    - mwx1->file/net
    - mwx1->file/net/db
  ndfl:
    configs:
    - ndfl->off
    - ndfl->net
    - ndfl->file/net
    - ndfl->file/net/db
  pco2:
    configs:
    - pco2->off
    - pco2->net
    - pco2->file/net
    - pco2->file/net/db
  PCOD:
    configs:
    - PCOD->off
    - PCOD->net
    - PCOD->file/net
    - PCOD->file/net/db
  pguv:
    configs:
    - pguv->off
    - pguv->net
    - pguv->file/net
    - pguv->file/net/db
  rtmp:
    configs:
    - rtmp->off
    - rtmp->net
    - rtmp->file/net
    - rtmp->file/net/db
  s330:
    configs:
    - s330->off
    - s330->net
    - s330->file/net
    - s330->file/net/db
  seap:
    configs:
    - seap->off
    - seap->net
    - seap->file/net
    - seap->file/net/db
  sp1b:
    configs:
    - sp1b->off
    - sp1b->net
    - sp1b->file/net
    - sp1b->file/net/db
  svp1:
    configs:
    - svp1->off
    - svp1->net
    - svp1->file/net
    - svp1->file/net/db
  tsg1:
    configs:
    - tsg1->off
    - tsg1->net
    - tsg1->file/net
    - tsg1->file/net/db
  tsg2:
    configs:
    - tsg2->off
    - tsg2->net
    - tsg2->file/net
    - tsg2->file/net/db
  bwnc:
    configs:
    - bwnc->off
    - bwnc->net
    - bwnc->file/net
    - bwnc->file/net/db
  cwnc:
    configs:
    - cwnc->off
    - cwnc->net
    - cwnc->file/net
    - cwnc->file/net/db
  twnc:
    configs:
    - twnc->off
    - twnc->net
    - twnc->file/net
    - twnc->file/net/db
  true_wind:
    configs:
    - true_wind->off
    - true_wind->net
    - true_wind->file/net
    - true_wind->file/net/db

########################################
modes:
  'off':
    adcp: adcp->off
    ctdd: ctdd->off
    eng1: eng1->off
    gp02: gp02->off
    grv1: grv1->off
    gyr1: gyr1->off
    hdas: hdas->off
    knud: knud->off
    mbdp: mbdp->off
    mwx1: mwx1->off
    ndfl: ndfl->off
    pco2: pco2->off
    PCOD: PCOD->off
    pguv: pguv->off
    rtmp: rtmp->off
    s330: s330->off
    seap: seap->off
    sp1b: sp1b->off
    svp1: svp1->off
    tsg1: tsg1->off
    tsg2: tsg2->off
    bwnc: bwnc->off
    cwnc: cwnc->off
    twnc: twnc->off
    true_wind: true_wind->off

  monitor:
    adcp: adcp->net
    ctdd: ctdd->net
    eng1: eng1->net
    gp02: gp02->net
    grv1: grv1->net
    gyr1: gyr1->net
    hdas: hdas->net
    knud: knud->net
    mbdp: mbdp->net
    mwx1: mwx1->net
    ndfl: ndfl->net
    pco2: pco2->net
    PCOD: PCOD->net
    pguv: pguv->net
    rtmp: rtmp->net
    s330: s330->net
    seap: seap->net
    sp1b: sp1b->net
    svp1: svp1->net
    tsg1: tsg1->net
    tsg2: tsg2->net
    bwnc: bwnc->net
    cwnc: cwnc->net
    twnc: twnc->net
    true_wind: true_wind->net

  log:
    adcp: adcp->file/net
    ctdd: ctdd->file/net
    eng1: eng1->file/net
    gp02: gp02->file/net
    grv1: grv1->file/net
    gyr1: gyr1->file/net
    hdas: hdas->file/net
    knud: knud->file/net
    mbdp: mbdp->file/net
    mwx1: mwx1->file/net
    ndfl: ndfl->file/net
    pco2: pco2->file/net
    PCOD: PCOD->file/net
    pguv: pguv->file/net
    rtmp: rtmp->file/net
    s330: s330->file/net
    seap: seap->file/net
    sp1b: sp1b->file/net
    svp1: svp1->file/net
    tsg1: tsg1->file/net
    tsg2: tsg2->file/net
    bwnc: bwnc->file/net
    cwnc: cwnc->file/net
    twnc: twnc->file/net
    true_wind: true_wind->file/net

  'log+db':
    adcp: adcp->file/net/db
    ctdd: ctdd->file/net/db
    eng1: eng1->file/net/db
    gp02: gp02->file/net/db
    grv1: grv1->file/net/db
    gyr1: gyr1->file/net/db
    hdas: hdas->file/net/db
    knud: knud->file/net/db
    mbdp: mbdp->file/net/db
    mwx1: mwx1->file/net/db
    ndfl: ndfl->file/net/db
    pco2: pco2->file/net/db
    PCOD: PCOD->file/net/db
    pguv: pguv->file/net/db
    rtmp: rtmp->file/net/db
    s330: s330->file/net/db
    seap: seap->file/net/db
    sp1b: sp1b->file/net/db
    svp1: svp1->file/net/db
    tsg1: tsg1->file/net/db
    tsg2: tsg2->file/net/db
    bwnc: bwnc->file/net/db
    cwnc: cwnc->file/net/db
    twnc: twnc->file/net/db
    true_wind: true_wind->file/net/db

########################################
default_mode: 'off'

########################################
configs:
  ########
  adcp->off:
    name: adcp->off

  adcp->net:
    name: adcp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr05
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: adcp
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:adcp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  adcp->file/net:
    name: adcp->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr05
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/adcp/raw/LMG1903_adcp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:adcp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  adcp->file/net/db:
    name: adcp->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr05
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/adcp/raw/LMG1903_adcp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: adcp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:adcp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  ctdd->off:
    name: ctdd->off

  ctdd->net:
    name: ctdd->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr24
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: ctdd
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:ctdd'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  ctdd->file/net:
    name: ctdd->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr24
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/ctdd/raw/LMG1903_ctdd
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ctdd
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ctdd
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:ctdd'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  ctdd->file/net/db:
    name: ctdd->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr24
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/ctdd/raw/LMG1903_ctdd
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ctdd
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ctdd
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ctdd
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:ctdd'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  eng1->off:
    name: eng1->off

  eng1->net:
    name: eng1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr06
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: eng1
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:eng1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  eng1->file/net:
    name: eng1->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr06
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/eng1/raw/LMG1903_eng1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:eng1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  eng1->file/net/db:
    name: eng1->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr06
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/eng1/raw/LMG1903_eng1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: eng1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:eng1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  gp02->off:
    name: gp02->off

  gp02->net:
    name: gp02->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr03
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: gp02
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gp02'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  gp02->file/net:
    name: gp02->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr03
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/gp02/raw/LMG1903_gp02
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gp02'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  gp02->file/net/db:
    name: gp02->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr03
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/gp02/raw/LMG1903_gp02
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gp02
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gp02'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  grv1->off:
    name: grv1->off

  grv1->net:
    name: grv1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr14
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: grv1
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:grv1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  grv1->file/net:
    name: grv1->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr14
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/grv1/raw/LMG1903_grv1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:grv1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  grv1->file/net/db:
    name: grv1->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr14
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/grv1/raw/LMG1903_grv1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: grv1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:grv1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  gyr1->off:
    name: gyr1->off

  gyr1->net:
    name: gyr1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr04
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: gyr1
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gyr1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  gyr1->file/net:
    name: gyr1->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr04
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/gyr1/raw/LMG1903_gyr1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gyr1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  gyr1->file/net/db:
    name: gyr1->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr04
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/gyr1/raw/LMG1903_gyr1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: gyr1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:gyr1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  hdas->off:
    name: hdas->off

  hdas->net:
    name: hdas->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr27
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: hdas
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:hdas'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  hdas->file/net:
    name: hdas->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr27
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/hdas/raw/LMG1903_hdas
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:hdas'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  hdas->file/net/db:
    name: hdas->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr27
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/hdas/raw/LMG1903_hdas
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: hdas
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:hdas'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  knud->off:
    name: knud->off

  knud->net:
    name: knud->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr12
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: knud
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:knud'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  knud->file/net:
    name: knud->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr12
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/knud/raw/LMG1903_knud
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:knud'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  knud->file/net/db:
    name: knud->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr12
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/knud/raw/LMG1903_knud
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: knud
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:knud'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  mbdp->off:
    name: mbdp->off

  mbdp->net:
    name: mbdp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr0f
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: mbdp
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mbdp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  mbdp->file/net:
    name: mbdp->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr0f
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/mbdp/raw/LMG1903_mbdp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mbdp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  mbdp->file/net/db:
    name: mbdp->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr0f
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/mbdp/raw/LMG1903_mbdp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mbdp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mbdp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  mwx1->off:
    name: mwx1->off

  mwx1->net:
    name: mwx1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr16
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: mwx1
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mwx1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  mwx1->file/net:
    name: mwx1->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr16
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/mwx1/raw/LMG1903_mwx1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mwx1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  mwx1->file/net/db:
    name: mwx1->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr16
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/mwx1/raw/LMG1903_mwx1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: mwx1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:mwx1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  ndfl->off:
    name: ndfl->off

  ndfl->net:
    name: ndfl->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr17
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: ndfl
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:ndfl'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  ndfl->file/net:
    name: ndfl->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr17
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/ndfl/raw/LMG1903_ndfl
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ndfl
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ndfl
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:ndfl'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  ndfl->file/net/db:
    name: ndfl->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr17
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/ndfl/raw/LMG1903_ndfl
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ndfl
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ndfl
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: ndfl
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:ndfl'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  pco2->off:
    name: pco2->off

  pco2->net:
    name: pco2->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr18
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: pco2
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pco2'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  pco2->file/net:
    name: pco2->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr18
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/pco2/raw/LMG1903_pco2
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pco2'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  pco2->file/net/db:
    name: pco2->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr18
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/pco2/raw/LMG1903_pco2
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pco2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pco2'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  PCOD->off:
    name: PCOD->off

  PCOD->net:
    name: PCOD->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr00
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: PCOD
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:PCOD'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  PCOD->file/net:
    name: PCOD->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr00
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/PCOD/raw/LMG1903_PCOD
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:PCOD'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  PCOD->file/net/db:
    name: PCOD->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 4800
        port: /dev/ttyr00
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/PCOD/raw/LMG1903_PCOD
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: PCOD
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:PCOD'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  pguv->off:
    name: pguv->off

  pguv->net:
    name: pguv->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr1e
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: pguv
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pguv'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  pguv->file/net:
    name: pguv->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr1e
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/pguv/raw/LMG1903_pguv
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pguv'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  pguv->file/net/db:
    name: pguv->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr1e
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/pguv/raw/LMG1903_pguv
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: pguv
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:pguv'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  rtmp->off:
    name: rtmp->off

  rtmp->net:
    name: rtmp->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr26
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: rtmp
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:rtmp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  rtmp->file/net:
    name: rtmp->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr26
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/rtmp/raw/LMG1903_rtmp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:rtmp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  rtmp->file/net/db:
    name: rtmp->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr26
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/rtmp/raw/LMG1903_rtmp
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: rtmp
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:rtmp'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  s330->off:
    name: s330->off

  s330->net:
    name: s330->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr22
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: s330
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:s330'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  s330->file/net:
    name: s330->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr22
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/s330/raw/LMG1903_s330
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:s330'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  s330->file/net/db:
    name: s330->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr22
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/s330/raw/LMG1903_s330
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: s330
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:s330'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  seap->off:
    name: seap->off

  seap->net:
    name: seap->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr2a
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: seap
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:seap'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  seap->file/net:
    name: seap->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr2a
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/seap/raw/LMG1903_seap
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:seap'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  seap->file/net/db:
    name: seap->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr2a
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/seap/raw/LMG1903_seap
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: seap
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:seap'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  sp1b->off:
    name: sp1b->off

  sp1b->net:
    name: sp1b->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr23
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: sp1b
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:sp1b'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  sp1b->file/net:
    name: sp1b->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr23
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/sp1b/raw/LMG1903_sp1b
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: sp1b
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: sp1b
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:sp1b'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  sp1b->file/net/db:
    name: sp1b->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr23
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/sp1b/raw/LMG1903_sp1b
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: sp1b
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: sp1b
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: sp1b
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:sp1b'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  svp1->off:
    name: svp1->off

  svp1->net:
    name: svp1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr07
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: svp1
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:svp1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  svp1->file/net:
    name: svp1->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr07
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/svp1/raw/LMG1903_svp1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:svp1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  svp1->file/net/db:
    name: svp1->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr07
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/svp1/raw/LMG1903_svp1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: svp1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:svp1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  tsg1->off:
    name: tsg1->off

  tsg1->net:
    name: tsg1->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr25
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: tsg1
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  tsg1->file/net:
    name: tsg1->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr25
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/tsg1/raw/LMG1903_tsg1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  tsg1->file/net/db:
    name: tsg1->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr25
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/tsg1/raw/LMG1903_tsg1
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg1
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg1'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  tsg2->off:
    name: tsg2->off

  tsg2->net:
    name: tsg2->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr29
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: tsg2
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg2'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  tsg2->file/net:
    name: tsg2->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr29
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/tsg2/raw/LMG1903_tsg2
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg2'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  tsg2->file/net/db:
    name: tsg2->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 9600
        port: /dev/ttyr29
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/tsg2/raw/LMG1903_tsg2
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: tsg2
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:tsg2'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  bwnc->off:
    name: bwnc->off

  bwnc->net:
    name: bwnc->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr0a
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: bwnc
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:bwnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  bwnc->file/net:
    name: bwnc->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr0a
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/bwnc/raw/LMG1903_bwnc
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: bwnc
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: bwnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:bwnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  bwnc->file/net/db:
    name: bwnc->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr0a
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/bwnc/raw/LMG1903_bwnc
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: bwnc
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: bwnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: bwnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:bwnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  cwnc->off:
    name: cwnc->off

  cwnc->net:
    name: cwnc->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr01
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: cwnc
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:cwnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  cwnc->file/net:
    name: cwnc->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr01
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/cwnc/raw/LMG1903_cwnc
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: cwnc
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: cwnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:cwnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  cwnc->file/net/db:
    name: cwnc->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr01
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/cwnc/raw/LMG1903_cwnc
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: cwnc
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: cwnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: cwnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:cwnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  twnc->off:
    name: twnc->off

  twnc->net:
    name: twnc->net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr0b
    transforms:                 # Add timestamp and logger label
    - class: TimestampTransform
    - class: PrefixTransform
      kwargs:
        prefix: twnc
    writers:
    - class: UDPWriter
      kwargs:
        port: 6224
        interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:twnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  twnc->file/net:
    name: twnc->file/net
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr0b
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/twnc/raw/LMG1903_twnc
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: twnc
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: twnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:twnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  twnc->file/net/db:
    name: twnc->file/net/db
    readers:                    # Read from simulated serial port
      class: SerialReader
      kwargs:
        baudrate: 19200
        port: /dev/ttyr0b
    transforms:                 # Add timestamp
    - class: TimestampTransform
    writers:
    - class: LogfileWriter      # Write to logfile
      kwargs:
        filebase: /data/logger/twnc/raw/LMG1903_twnc
    - class: ComposedWriter     # Also prefix with logger name and broadcast
      kwargs:                   # raw NMEA on UDP
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: twnc
        writers:
        - class: UDPWriter
          kwargs:
            port: 6224
            interface: 157.132.129.255 
    - class: ComposedWriter     # Also parse to fields and send to CACHE UDP
      kwargs:                   # port for CachedDataServer to pick up
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: twnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
    - class: ComposedWriter     # Also write parsed data to database
      kwargs:
        transforms:
        - class: PrefixTransform
          kwargs:
            prefix: twnc
        - class: ParseTransform
          kwargs:
            definition_path: local/devices/*.yaml,local/usap/devices/*.yaml,local/usap/nbp/devices/*.yaml
        writers:
        - class: DatabaseWriter
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:twnc'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766
  ########
  true_wind->off:
    name: true_wind->off

  true_wind->net:
    name: true_wind->net
    readers:
      class: CachedDataReader
      kwargs:
        data_server: localhost:8766
        subscription:
          fields:
            S330CourseTrue:
              seconds: 0
            S330HeadingTrue:
              seconds: 0
            S330SpeedKt:
              seconds: 0
            MwxPortRelWindDir:
              seconds: 0
            MwxPortRelWindSpeed:
              seconds: 0
            MwxStbdRelWindDir:
              seconds: 0
            MwxStbdRelWindSpeed:
              seconds: 0
    transforms:
    - class: ComposedDerivedDataTransform
      kwargs:
        transforms:
        - class: TrueWindsTransform
          kwargs:
            apparent_dir_name: PortApparentWindDir
            convert_wind_factor: 1.94384
            course_field: S330CourseTrue
            heading_field: S330HeadingTrue
            speed_field: S330SpeedKt
            true_dir_name: PortTrueWindDir
            true_speed_name: PortTrueWindSpeed
            update_on_fields:
            - MwxPortRelWindDir
            wind_dir_field: MwxPortRelWindDir
            wind_speed_field: MwxPortRelWindSpeed
        - class: TrueWindsTransform
          kwargs:
            apparent_dir_name: StbdApparentWindDir
            convert_wind_factor: 1.94384
            course_field: S330CourseTrue
            heading_field: S330HeadingTrue
            speed_field: S330SpeedKt
            true_dir_name: StbdTrueWindDir
            true_speed_name: StbdTrueWindSpeed
            update_on_fields:
            - MwxStbdRelWindDir
            wind_dir_field: MwxStbdRelWindDir
            wind_speed_field: MwxStbdRelWindSpeed
    writers:
    - class: CachedDataWriter
      kwargs:
        data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:true_wind'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  true_wind->file/net:
    name: true_wind->file/net
    readers:
      class: CachedDataReader
      kwargs:
        data_server: localhost:8766
        subscription:
          fields:
            S330CourseTrue:
              seconds: 0
            S330HeadingTrue:
              seconds: 0
            S330SpeedKt:
              seconds: 0
            MwxPortRelWindDir:
              seconds: 0
            MwxPortRelWindSpeed:
              seconds: 0
            MwxStbdRelWindDir:
              seconds: 0
            MwxStbdRelWindSpeed:
              seconds: 0
    transforms:
    - class: ComposedDerivedDataTransform
      kwargs:
        transforms:
        - class: TrueWindsTransform
          kwargs:
            apparent_dir_name: PortApparentWindDir
            convert_wind_factor: 1.94384
            course_field: S330CourseTrue
            heading_field: S330HeadingTrue
            speed_field: S330SpeedKt
            true_dir_name: PortTrueWindDir
            true_speed_name: PortTrueWindSpeed
            update_on_fields:
            - MwxPortRelWindDir
            wind_dir_field: MwxPortRelWindDir
            wind_speed_field: MwxPortRelWindSpeed
        - class: TrueWindsTransform
          kwargs:
            apparent_dir_name: StbdApparentWindDir
            convert_wind_factor: 1.94384
            course_field: S330CourseTrue
            heading_field: S330HeadingTrue
            speed_field: S330SpeedKt
            true_dir_name: StbdTrueWindDir
            true_speed_name: StbdTrueWindSpeed
            update_on_fields:
            - MwxStbdRelWindDir
            wind_dir_field: MwxStbdRelWindDir
            wind_speed_field: MwxStbdRelWindSpeed
    writers:
    - class: CachedDataWriter
      kwargs:
        data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:true_wind'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

  true_wind->file/net/db:
    name: true_wind->file/net/db
    readers:
      class: CachedDataReader
      kwargs:
        data_server: localhost:8766
        subscription:
          fields:
            S330CourseTrue:
              seconds: 0
            S330HeadingTrue:
              seconds: 0
            S330SpeedKt:
              seconds: 0
            MwxPortRelWindDir:
              seconds: 0
            MwxPortRelWindSpeed:
              seconds: 0
            MwxStbdRelWindDir:
              seconds: 0
            MwxStbdRelWindSpeed:
              seconds: 0
    transforms:
    - class: ComposedDerivedDataTransform
      kwargs:
        transforms:
        - class: TrueWindsTransform
          kwargs:
            apparent_dir_name: PortApparentWindDir
            convert_wind_factor: 1.94384
            course_field: S330CourseTrue
            heading_field: S330HeadingTrue
            speed_field: S330SpeedKt
            true_dir_name: PortTrueWindDir
            true_speed_name: PortTrueWindSpeed
            update_on_fields:
            - MwxPortRelWindDir
            wind_dir_field: MwxPortRelWindDir
            wind_speed_field: MwxPortRelWindSpeed
        - class: TrueWindsTransform
          kwargs:
            apparent_dir_name: StbdApparentWindDir
            convert_wind_factor: 1.94384
            course_field: S330CourseTrue
            heading_field: S330HeadingTrue
            speed_field: S330SpeedKt
            true_dir_name: StbdTrueWindDir
            true_speed_name: StbdTrueWindSpeed
            update_on_fields:
            - MwxStbdRelWindDir
            wind_dir_field: MwxStbdRelWindDir
            wind_speed_field: MwxStbdRelWindSpeed
    writers:
    - class: CachedDataWriter
      kwargs:
        data_server: localhost:8766
    stderr_writers:          # Turn stderr into DASRecord, broadcast to cache
    - class: ComposedWriter  # UDP port for CachedDataServer to pick up.
      kwargs:
        transforms:
        - class: ToDASRecordTransform
          kwargs:
            field_name: 'stderr:logger:true_wind'
        writers:
        - class: CachedDataWriter
          kwargs:
            data_server: localhost:8766

